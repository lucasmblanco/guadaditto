name: Version Update
permissions:
  contents: write
on:
  push:
    branches:
      - main
jobs:
  version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Perform semantic version
        uses: paulhatch/semantic-version@v5.0.3
        id: semantic_version
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"
          user_format_type: "csv"
          bump_each_commit: false
          search_commit_body: true

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.semantic_version.outputs.version_tag }}
          tag_prefix: ""
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update package.json and manifest.json
        run: |
          # Actualizar package.json
          pnpm pkg set version=${{ steps.semantic_version.outputs.version }}

          # Ejecutar script para actualizar manifest.json
          node -e "
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('./public/manifest.json', 'utf8'));
          manifest.version = '${{ steps.semantic_version.outputs.version }}';
          fs.writeFileSync('./public/manifest.json', JSON.stringify(manifest, null, 2));
          "

      - name: Commit and Push Version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add package.json public/manifest.json
          git commit -m "chore: bump version to ${{ steps.semantic_version.outputs.version }}"

          # Push explÃ­citamente a la rama actual
          git push origin HEAD

      - name: Build project
        run: pnpm run build

      - name: Compress dist folder
        run: |
          RELEASE_NAME="guardaditto-${{ steps.semantic_version.outputs.version }}.zip"
          cd dist
          zip -r "../$RELEASE_NAME" *
          cd ..
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          fromTag: v${{ steps.semantic_version.outputs.previous_version }}
          toTag: ${{ steps.tag_version.outputs.new_tag }}

      - name: Create production release
        uses: ncipollo/release-action@v1
        id: release
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.semantic_version.outputs.version_tag }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: false
          prerelease: false
          commit: ${{ steps.semantic_version.outputs.current_commit }}
          artifacts: ${{ env.RELEASE_NAME }}

      - name: Update CHANGELOG & update develop branch
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          changelog='${{ steps.build_changelog.outputs.changelog }}'
          escaped_changelog=$(printf '%s\n' "$changelog" | sed 's/\\/&&/g;s/^[[:blank:]]/\\&/;s/$/\\/')
          sed -i "2i ${escaped_changelog%?}" CHANGELOG.md
          sed -i "2i ## ${{ steps.semantic_version.outputs.version_tag }} - $(date +'%d-%m-%Y')" CHANGELOG.md
          git add -A && git commit -m "chore(docs): update CHANGELOG.MD"
          git push origin main
          git push --force origin main:dev
